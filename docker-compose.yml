version: "3.7"
services:
  waitfordb:
    image: dadarek/wait-for-dependencies
    depends_on:
      - db
    command: postgresql:5432
    networks:
      - mlflow
  s3:
    image: minio/minio
    container_name: s3
    environment:
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY}
    volumes:
      - ./buckets:/data:consistent
    expose:
      - "9000"
    ports:
      - "9000:9000"
    command: minio server /data
    networks: 
        - mlflow
    healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
        interval: 30s
        timeout: 20s
        retries: 3
  db:
    image: postgres:10.5
    container_name: postgresql
    networks: 
      - mlflow
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: mlflow-db
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    hostname: postgresql
    restart: always
  mlflow:
    restart: always
    build: ./mlflow
    image: mlflow_server
    container_name: mlflow_server
    ports:
        - "5000:5000"
    networks: 
        - mlflow
    environment:
        - MLFLOW_S3_ENDPOINT_URL=http://s3:9000
        - AWS_ACCESS_KEY_ID=${MINIO_ACCESS_KEY}
        - AWS_SECRET_ACCESS_KEY=${MINIO_SECRET_KEY}
    command: mlflow server --backend-store-uri postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgresql:5432/mlflow-db --default-artifact-root s3://mlflow/ --host 0.0.0.0
    depends_on: 
        - db
        - waitfordb
  jenkins:
    image: jenkins/jenkins:lts
    privileged: true
    user: root
    ports:
      - 8081:8080
      - 50000:50000
    container_name: jenkins
    networks: 
      - mlflow
    volumes:
      - ./jenkins:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
      - /usr/local/bin/docker:/usr/local/bin/docker

networks: 
  mlflow: